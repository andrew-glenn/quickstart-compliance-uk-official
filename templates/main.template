AWSTemplateFormatVersion: "2010-09-09"
Description: "This cloudformation stack uses nested templates to deploy a cloud enviroment that can be used to mimic a customers on prem enviroment.  This can then be used to demonstrate how AWS services can integrate with on premise enviroments such as creating an VPN to connect the two or extending an existing Active Directory into AWS. (qs-1qup6ra6l)"
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Launch into a new VPC"
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC Configuration
        Parameters:
          - InternetVPCCidr
          - SharedVPCCidr
          - ProductionVPCCidr
          - EndpointVPCCidr
      - Label:
          default: Deployment Configuration
        Parameters:
          - ProjectName
          - DBPassword
          - CisAlertingEmail
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
          - QSS3BucketRegion
    ParameterLabels:
      ProjectName:
        default: Project Name
      InternetVPCCidr:
        default: Internet VPC CIDR
      SharedVPCCidr:
        default: Shared VPC CIDR
      ProductionVPCCidr:
        default: Production VPC CIDR
      EndpointVPCCidr:
        default: Endpoint VPC CIDR
      DBPassword:
        default: Database password
      CisAlertingEmail:
        default: CIS Alerting Email
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      QSS3BucketRegion:
        default: Quick Start S3 bucket region
Parameters:
  ProjectName:
    Description: Name to tag resources with
    Type: String
    Default: official-quickstart
  InternetVPCCidr:
    Description: CIDR for Internet VPC supernet
    Type: String
    Default: 10.0.0.0/16
  SharedVPCCidr:
    Description: CIDR for Shared VPC supernet
    Type: String
    Default: 10.10.0.0/16
  ProductionVPCCidr:
    Description: CIDR for Production VPC supernet
    Type: String
    Default: 172.16.0.0/16
  EndpointVPCCidr:
    Description: CIDR for Endpoint VPC supernet
    Type: String
    Default: 192.168.0.0/16
  DBPassword:
    Description: Password to set for database server
    NoEcho: true
    MinLength: 8
    Type: String
  QSS3BucketRegion:
    Default: 'eu-west-2'
    Description: 'The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.'
    Type: String
  QSS3BucketName:
    Type: String
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-.]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, periods (.), and hyphens (-). It cannot start or
      end with a hyphen (-).
    Default: aws-quickstart
  QSS3KeyPrefix:
    Type: String
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Default: quickstart-compliance-uk-official/
  CisAlertingEmail:
    Description: 'Email Address to send Alert notifications for CIS breaches'
    Type: String
    AllowedPattern: '^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$'

Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']

Mappings:
  RegionMap:
    eu-north-1:
      "HVM64": "ami-0f630db6194a81ad0"
    ap-south-1:
      "HVM64": "ami-03b5297d565ef30a6"
    eu-west-3:
      "HVM64": "ami-07eda9385feb1e969"
    eu-west-2:
      "HVM64": "ami-0cb790308f7591fa6"
    eu-west-1:
      "HVM64": "ami-04d5cc9b88f9d1d39"
    ap-northeast-3:
      "HVM64": "ami-075b14c8e2f90fd84"
    ap-northeast-2:
      "HVM64": "ami-0db78afd3d150fc18"
    ap-northeast-1:
      "HVM64": "ami-052652af12b58691f"
    sa-east-1:
      "HVM64": "ami-0b032e878a66c3b68"
    ca-central-1:
      "HVM64": "ami-0bf54ac1b628cf143"
    ap-southeast-1:
      "HVM64": "ami-0cbc6aae997c6538a"
    ap-southeast-2:
      "HVM64": "ami-08fdde86b93accf1c"
    eu-central-1:
      "HVM64": "ami-0ec1ba09723e5bfac"
    us-east-1:
      "HVM64": "ami-0fc61db8544a617ed"
    us-east-2:
      "HVM64": "ami-0e01ce4ee18447327"
    us-west-1:
      "HVM64": "ami-09a7fe78668f1e2c0"
    us-west-2:
      "HVM64": "ami-0ce21b51cb31a48b8"

Resources:
  InternetVPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/vpc/vpc.yaml
        - S3Bucket: !If
            - UsingDefaultBucket
            - !Sub '${QSS3BucketName}-${AWS::Region}'
            - !Ref 'QSS3BucketName'
          S3Region: !If
            - UsingDefaultBucket
            - !Ref 'AWS::Region'
            - !Ref 'QSS3BucketRegion'
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Name
          Value: InternetVPC
      Parameters:
        ProjectName: InternetVPC
        VPCCidrBlock: !Ref InternetVPCCidr
        MakePublic: true
        AddNat: true

  SharedVPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/vpc/vpc.yaml
        - S3Bucket: !If
            - UsingDefaultBucket
            - !Sub '${QSS3BucketName}-${AWS::Region}'
            - !Ref 'QSS3BucketName'
          S3Region: !If
            - UsingDefaultBucket
            - !Ref 'AWS::Region'
            - !Ref 'QSS3BucketRegion'
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Name
          Value: SharedVPC
      Parameters:
        ProjectName: SharedVPC
        VPCCidrBlock: !Ref SharedVPCCidr

  ProductionVPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/vpc/vpc.yaml
        - S3Bucket: !If
            - UsingDefaultBucket
            - !Sub '${QSS3BucketName}-${AWS::Region}'
            - !Ref 'QSS3BucketName'
          S3Region: !If
            - UsingDefaultBucket
            - !Ref 'AWS::Region'
            - !Ref 'QSS3BucketRegion'
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Name
          Value: ProductionVPC
      Parameters:
        ProjectName: ProductionVPC
        VPCCidrBlock: !Ref ProductionVPCCidr

  EndpointVPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/vpc/vpc.yaml
        - S3Bucket: !If
            - UsingDefaultBucket
            - !Sub '${QSS3BucketName}-${AWS::Region}'
            - !Ref 'QSS3BucketName'
          S3Region: !If
            - UsingDefaultBucket
            - !Ref 'AWS::Region'
            - !Ref 'QSS3BucketRegion'
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Name
          Value: EndpointVPC
      Parameters:
        ProjectName: EndpointVPC
        VPCCidrBlock: !Ref EndpointVPCCidr

  TransitGateway:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/tgw/tgw.yaml
        - S3Bucket: !If
            - UsingDefaultBucket
            - !Sub '${QSS3BucketName}-${AWS::Region}'
            - !Ref 'QSS3BucketName'
          S3Region: !If
            - UsingDefaultBucket
            - !Ref 'AWS::Region'
            - !Ref 'QSS3BucketRegion'
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Name
          Value: TransitGateway
      Parameters:
        SharedServicesPrivateSubAZ1: !GetAtt SharedVPC.Outputs.PrivateSubnetAId
        SharedServicesPrivateSubAZ2: !GetAtt SharedVPC.Outputs.PrivateSubnetBId
        SharedServicesPrivateSubAZ3: !GetAtt SharedVPC.Outputs.PrivateSubnetCId
        SharedServicesVPCId: !GetAtt SharedVPC.Outputs.VPCId
        EndpointSubnets: !Join [ ',', [ !GetAtt EndpointVPC.Outputs.PrivateSubnetAId, !GetAtt EndpointVPC.Outputs.PrivateSubnetBId, !GetAtt EndpointVPC.Outputs.PrivateSubnetCId ] ]
        EndpointVPCId: !GetAtt EndpointVPC.Outputs.VPCId
        ProdPrivateSubAZ1: !GetAtt ProductionVPC.Outputs.PrivateSubnetAId
        ProdPrivateSubAZ2: !GetAtt ProductionVPC.Outputs.PrivateSubnetBId
        ProdPrivateSubAZ3: !GetAtt ProductionVPC.Outputs.PrivateSubnetCId
        ProductionVPCId: !GetAtt ProductionVPC.Outputs.VPCId
        SharedServicesRT: !GetAtt SharedVPC.Outputs.PrivateRouteTable
        EndpointPrivateRT: !GetAtt EndpointVPC.Outputs.PrivateRouteTable
        ProductionPrivateRT: !GetAtt ProductionVPC.Outputs.PrivateRouteTable
        InternetVPCId: !GetAtt InternetVPC.Outputs.VPCId
        EndpointVPCCidr: !Ref EndpointVPCCidr
        InternetVPCCidr: !Ref InternetVPCCidr
        SharedVPCCidr: !Ref SharedVPCCidr
        ProductionVPCCidr: !Ref ProductionVPCCidr
        InternetPrivateRT: !GetAtt InternetVPC.Outputs.PrivateRouteTable
        ProjectName: !Ref ProjectName

  testStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/testInstances/instances.yaml
        - S3Bucket: !If
            - UsingDefaultBucket
            - !Sub '${QSS3BucketName}-${AWS::Region}'
            - !Ref 'QSS3BucketName'
          S3Region: !If
            - UsingDefaultBucket
            - !Ref 'AWS::Region'
            - !Ref 'QSS3BucketRegion'
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Name
          Value: PrivateHostedZone
      Parameters:
        EndpointSubnetId: !GetAtt EndpointVPC.Outputs.PrivateSubnetAId
        SharedSubnetId: !GetAtt SharedVPC.Outputs.PrivateSubnetAId
        ProductionSubnetId: !GetAtt ProductionVPC.Outputs.PrivateSubnetAId
        InternetPrivateSubnetIdA: !GetAtt InternetVPC.Outputs.PrivateSubnetAId
        InternetPrivateSubnetIdB: !GetAtt InternetVPC.Outputs.PrivateSubnetBId
        InternetPrivateSubnetIdC: !GetAtt InternetVPC.Outputs.PrivateSubnetCId
        InternetPublicSubnetId: !GetAtt InternetVPC.Outputs.PublicSubnetAId
        InternetVPCId: !GetAtt InternetVPC.Outputs.VPCId
        ProductionVPCId: !GetAtt ProductionVPC.Outputs.VPCId
        SharedVPCId: !GetAtt SharedVPC.Outputs.VPCId
        EndpointVPCId: !GetAtt EndpointVPC.Outputs.VPCId


  outboundProxy:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/outboundProxy/outboundProxy.yaml
        - S3Bucket: !If
            - UsingDefaultBucket
            - !Sub '${QSS3BucketName}-${AWS::Region}'
            - !Ref 'QSS3BucketName'
          S3Region: !If
            - UsingDefaultBucket
            - !Ref 'AWS::Region'
            - !Ref 'QSS3BucketRegion'
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
      Parameters:
        InternetPrivateSubnetIdA: !GetAtt InternetVPC.Outputs.PrivateSubnetAId
        InternetPrivateSubnetIdB: !GetAtt InternetVPC.Outputs.PrivateSubnetBId
        InternetPrivateSubnetIdC: !GetAtt InternetVPC.Outputs.PrivateSubnetCId
        InternetVPCId: !GetAtt InternetVPC.Outputs.VPCId
        EndpointVPCId: !GetAtt EndpointVPC.Outputs.VPCId
        SharedVPCId: !GetAtt SharedVPC.Outputs.VPCId
        ProductionVPCId: !GetAtt ProductionVPC.Outputs.VPCId
        Subnets: !Join [ ',', [ !GetAtt EndpointVPC.Outputs.PrivateSubnetAId, !GetAtt EndpointVPC.Outputs.PrivateSubnetBId, !GetAtt EndpointVPC.Outputs.PrivateSubnetCId ] ]
        ProjectName: !Ref ProjectName

  complianceControls:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - InternetVPC
      - EndpointVPC
      - SharedVPC
      - ProductionVPC
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/compliance-controls/compliance-controls.yaml
        - S3Bucket: !If
            - UsingDefaultBucket
            - !Sub '${QSS3BucketName}-${AWS::Region}'
            - !Ref 'QSS3BucketName'
          S3Region: !If
            - UsingDefaultBucket
            - !Ref 'AWS::Region'
            - !Ref 'QSS3BucketRegion'
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
      Parameters:
        CisAlertingEmail: !Ref CisAlertingEmail

  sampleApp:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/sampleApplication/sampleApplication.yaml
        - S3Bucket: !If
            - UsingDefaultBucket
            - !Sub '${QSS3BucketName}-${AWS::Region}'
            - !Ref 'QSS3BucketName'
          S3Region: !If
            - UsingDefaultBucket
            - !Ref 'AWS::Region'
            - !Ref 'QSS3BucketRegion'
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
      Parameters:
        pProductionCIDR: !GetAtt ProductionVPC.Outputs.VPCCidrBlock
        pProductionVPC: !GetAtt ProductionVPC.Outputs.VPCId
        pAppPrivateSubnetA: !GetAtt ProductionVPC.Outputs.PrivateSubnetAId
        pAppPrivateSubnetB: !GetAtt ProductionVPC.Outputs.PrivateSubnetBId
        pAppPrivateSubnetC: !GetAtt ProductionVPC.Outputs.PrivateSubnetCId
        pAppInstanceType: t3.micro
        pDBPrivateSubnetA: !GetAtt ProductionVPC.Outputs.PrivateSubnetAId
        pDBPrivateSubnetB: !GetAtt ProductionVPC.Outputs.PrivateSubnetBId
        pAppAmi: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
        pDBName: wordpress
        pDBUser: dbuser
        pDBPassword: !Ref DBPassword
        pDBClass: db.t3.micro
        pDBAllocatedStorage: 10
        QSS3BucketName: !Sub
          - '${S3Bucket}'
          - S3Bucket: !If
            - UsingDefaultBucket
            - !Sub '${QSS3BucketName}-${AWS::Region}'
            - !Ref 'QSS3BucketName'
        QSS3BucketRegion: !Sub
          - '${S3Region}'
          - S3Region: !If
            - UsingDefaultBucket
            - !Ref 'AWS::Region'
            - !Ref 'QSS3BucketRegion'
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        proxyServer: !GetAtt outboundProxy.Outputs.proxyEndpointAddress
        InternetVPCId: !GetAtt InternetVPC.Outputs.VPCId
        InternetSubnets: !Join [ ',', [ !GetAtt InternetVPC.Outputs.PrivateSubnetAId, !GetAtt InternetVPC.Outputs.PrivateSubnetBId, !GetAtt InternetVPC.Outputs.PrivateSubnetCId ] ]
        InternetPublicSubnets: !Join [ ',', [ !GetAtt InternetVPC.Outputs.PublicSubnetAId, !GetAtt InternetVPC.Outputs.PublicSubnetBId, !GetAtt InternetVPC.Outputs.PublicSubnetCId ] ]

  defaultVPCFlowLogs:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/defaultVPC/addDefaultVPCFlowLogs.yaml
        - S3Bucket: !If
            - UsingDefaultBucket
            - !Sub '${QSS3BucketName}-${AWS::Region}'
            - !Ref 'QSS3BucketName'
          S3Region: !If
            - UsingDefaultBucket
            - !Ref 'AWS::Region'
            - !Ref 'QSS3BucketRegion'
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName

Outputs:
  ApplicationUrl:
    Value: !GetAtt sampleApp.Outputs.applicationUrl
  SurveyLink:
    Value: !GetAtt sampleApp.Outputs.SurveyLink
  Help:
    Value: !GetAtt sampleApp.Outputs.Help
    Description: For assistance or questions regarding this quickstart please email compliance-accelerator@amazon.com
